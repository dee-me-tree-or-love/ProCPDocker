@{
    ViewData["Title"] = "Home Page";
}

@{
    List<Docker.Models.Task> tasks = (List<Docker.Models.Task>)ViewData["tasks"];
    Docker.Models.Task current = (Docker.Models.Task)ViewData["current"];
    // for the ship and dock displays
    Docker.Models.Ship mainship = (Docker.Models.Ship)ViewData["ship"];
    Docker.Models.Dock maindock = (Docker.Models.Dock)ViewData["dock"];
    //Get current tasks from loader

    //test data
    int dummyX = 2;
    Random rn = new Random();
    Docker.Models.Ship ship;
    ship = new Docker.Models.Ship();
    ship.X = 3;
    ship.Y = 3;
    ship.Z = 3;
    ship.Containers = new List<Docker.Models.Container>();
    ship.Name = "MAR32";

    for (int i = 0; i < ship.X || i < ship.Z; i++)
    {
        ship.Containers.Add(new Docker.Models.Container()
        {
            ContainerLocation = ship,
            X = i,
            Y = 0,
            Z = i,
            ID = rn.Next(0, int.MaxValue)
        });
    }

    for (int i = 0; i < ship.Y || i < ship.Z; i++)
    {
        ship.Containers.Add(new Docker.Models.Container()
        {
            ContainerLocation = ship,
            X = 0,
            Y = i,
            Z = i,
            ID = rn.Next(0, int.MaxValue)
        });
    }
}
@{
    if ((bool)ViewData["refresh"])
    {
        <meta http-equiv="refresh" content="1;url=/Home/ProcessTask" />
    }
}
<div class="col-md-9">
    <table class="table">
        <tr>
            @*TODO: also pass int as a param to indicate depth of the slice*@
            <td>@await Component.InvokeAsync("SideSlice", ship)</td>
            <td>@await Component.InvokeAsync("FrontSlice", ship)</td>
            <td>Dock Side</td>
            <td>Dock Front</td>
        </tr>
        <tr>
            <td colspan="4" class="text-center">Ship + Dock picture</td>
        </tr>
    </table>
    <div class="col-md-4 text-center">
        <h4>Ship</h4>
        @if (mainship != null)
        {
            <h4>@mainship.Name</h4>
            <table class="table table-hover table-bordered table-compact">
                <thead>
                    <tr class="">
                        <th>Container</th>
                        <th>Location</th>
                        <th>Serial Number</th>
                    </tr>
                </thead>
                <tbody class="text-center panel-body">
                    @foreach (Docker.Models.Container c in mainship.Containers)
                    {
                        <tr>
                            <td><h6>@c.ID</h6></td>
                            <td><h6>@c.X ; @c.Y; @c.Z</h6></td>
                            <td><h6>@c.SerialNumber.Substring(0, 10)...</h6></td>
                        </tr>

                    }
                </tbody>
                </table>
        }
        else
        {
            <div>
                <h6>No ships are available...</h6>
            </div>

        }
</div>
    <div class="col-md-4  text-center">
        <h4>Dock</h4>
        @if (maindock != null)
        {
            <h4>@maindock.Name</h4>
            <table class="table table-hover table-bordered table-compact">
                <thead>
                    <tr class="">
                        <th>Container</th>
                        <th>Location</th>
                        <th>Serial Number</th>
                    </tr>
                </thead>
                <tbody class="text-center panel-body">
                    @foreach (Docker.Models.Container c in maindock.Containers)
                    {
                        <tr>
                            <td><h6>@c.ID</h6></td>
                            <td><h6>@c.X ; @c.Y; @c.Z</h6></td>
                            <td><h6>@c.SerialNumber.Substring(0,10)...</h6></td>
                        </tr>

                    }
                </tbody>
            </table>
        }
        else
        {
            <div>
                <h6>No ships are available...</h6>
            </div>

        }
    </div>
</div>
<div class="col-md-3">
    <div class="table-responsive">
        <div class="panel panel-success">
            <div class="panel-heading text-center"><h4>Current Tasks</h4></div>
            @*Loop trough current tasks*@
            @*@Html.ActionLink("Do task", "ProcessTask", "Home")*@
            <div class="text-center">
                <a href="@Url.Action("ProcessTask", "Home")" class="btn btn-secondary">
                    Do Task
                    <span class="glyphicon glyphicon glyphicon-play" aria-hidden="true"></span>
                </a>
                @* @Html.ActionLink("Complete all", "StopRefresh", "Home")*@
                <a href="@Url.Action("StopRefresh", "Home")" class="btn btn-secondary">
                    Stop Refreshing
                    <span class="glyphicon glyphicon-pause" aria-hidden="true"></span>
                </a>
            </div>            
            @if (current != null)
            {
                    <div class="panel-body">
                        <div class="col-md-8">
                            <div class="col-md-6">
                                <div class="row"><span class="glyphicon glyphicon-barcode" aria-hidden="true"></span> Container id</div>
                                <div class="row"><span class="glyphicon glyphicon-screenshot" aria-hidden="true"></span>Location</div>
                                <div class="row"><span class="glyphicon glyphicon-share-alt" aria-hidden="true"></span>Destination</div>
                            </div>
                            <div class="col-md-6">
                                <div class="row">@current.Payload.ID</div>
                                <div class="row">@current.Payload.ContainerLocation.Name @current.Payload.X:@current.Payload.Y:@current.Payload.Z</div>
                                <div class="row">@current.Destination.Name</div>
                            </div>
                        </div>
                        <div class="col-md-4 text-left">
                            <h3>@current.RequiredTime.ToString()</h3>
                        </div>
                    </div>
                }
            </div>
        <table class="table table-hover table-bordered table-compact">
            <thead>
                <tr class="">
                    <th>Container</th>
                    <th>Location</th>
                    <th>Destination</th>
                    <th>ET</th>
                    <th>Info</th>
                </tr>
            </thead>
            <tbody class="text-center panel-body">
                @if(tasks == null){
                <tr>
                    <td colspan="5">There are no tasks left or the process was stopped</td>
                </tr>
                }else{

                @for (int i = 0; i < tasks.Count; i++)
                {
                    Docker.Models.Task task = tasks[i];

                    <tr class="@(@task.Status == Docker.Models.TaskStatus.FINISHED ? "bg-success" : @task.Status == Docker.Models.TaskStatus.INPROGRESS ? "bg-warning" : "")">
                        <td>@task.Payload.ID</td>
                        <td>
                            @task.Payload.ContainerLocation.Name
                            <br />@task.Payload.X : @task.Payload.Y : @task.Payload.Z
                        </td>
                        <td>@task.Destination.Name</td>
                        <td>@task.RequiredTime.TotalMinutes minutes</td>
                        <td>
                            <button type="button" class="btn-sm btn-info" data-toggle="modal" data-target="#taskInfo-@task.Payload.ID">
                                Info
                            </button>
                        </td>
                    </tr>

                    <div class="modal fade" id="taskInfo-@task.Payload.ID" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                        <div class="modal-dialog" role="document">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h3 class="modal-title text-center" id="exampleModalLabel">Task details</h3>
                                </div>
                                <div class="modal-body">
                                    <div class="row">
                                        <div class="col-md-7">
                                            <p><b>Container: @task.Payload.ID</b></p>
                                            <p><b>Location: @task.Payload.ContainerLocation.Name - @task.Payload.X : @task.Payload.Y : @task.Payload.Z</b></p>
                                            <p><b>Destination: @task.Destination.Name</b></p>
                                            <p><b>Time created: @task.TimeCreated.ToString()</b></p>
                                            <p><b>Time modified: @task.TimeModified.ToString()</b></p>
                                            <p><b>ETC: @task.RequiredTime.TotalMinutes minutes</b></p>
                                        </div>
                                        <div class="col-md-5">
                                            <img src="images/container.png" class="img-responsive" alt="Container blue">
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-12">
                                            <button type="button" class="btn btn-primary btn-sm btn-block" data-dismiss="modal">Close</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
                }
            </tbody>
        </table>
    </div>
</div>